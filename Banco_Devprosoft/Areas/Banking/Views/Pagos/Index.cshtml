
@{
    ViewData["Title"] = "Pagos";
}

<h3>Pagos</h3>


<div class="row  mb-5">
    <div class="col-lg-3 col-sm-12">
        <label>Seleccione la cuenta a pagar</label>
        <select class="form-control" id="Select_Cuenta">
        </select>
    </div>
    <div class="col-lg-3 col-sm-12">
        <label>Desde Mi Cuenta</label>
        <select class="form-control" id="Select_Mis_Cuenta">
        </select>
    </div>

    <div class="col-lg-3 col-sm-12">
        <label>Monto A Pagar</label>
        <input id="Monto" type="number" placeholder="Monto a pagar" class="form-control" />
    </div>

    <div class="col-lg-3 col-sm-12">

        <button class="btn btn-primary" style="margin-top: 32px;" onclick="Procesar_Pago();">Procesar Pago</button>

    </div>

</div>


<div class="card card-success card-outline">

    <div class="card-header">

        <h4 class="text-light text-center ml-2 col-lg">Historial de Pagos</h4>


    </div>
    <div class="card-body">
        <table id="Tabla_Pagos" class="table table-responsive-lg table-hover w-100">
            <thead>
                <tr>
                    <th>Transacción #</th>
                    <th>Fecha y Hora</th>
                    <th>Cta. Origen</th>
                    <th>Cta. Préstamo</th>
                    <th>Monto</th>
                </tr>
            </thead>
            <tbody>


            </tbody>
        </table>
    </div>



</div>





@section Scripts{

    <script>

        $(document).ready(function () {

            $("li").removeClass("active");
            $("#li_Pagos").addClass("active");
            Obtener_Info_Cuentas_A_Pagar();
            Obtener_Info_Cuentas_Desde_A_Pagar();
            Obtener_Pagos()
        });

        function Obtener_Info_Cuentas_A_Pagar() {

            $.get("/Banking/Cuentas/Obtener_Info_Cuentas_A_Pagar").done(function (result) {

                $("#Select_Cuenta").empty();
                $.each(result.cuenta, function (i, item) {

                    var op = `<option value="${item.cuenta_ID}">${item.tipo_Cuenta} $${item.balance}</option>`;
                    $("#Select_Cuenta").append(op);
                })

                console.log(result);


            });

        }

        function Obtener_Info_Cuentas_Desde_A_Pagar() {

            $.get("/Banking/Cuentas/Obtener_Info_Cuentas_Desde_A_Pagar").done(function (result) {

                $("#Select_Mis_Cuenta").empty();
                $.each(result.cuenta, function (i, item) {

                    var op = `<option value="${item.cuenta_ID}">${item.tipo_Cuenta} $${item.balance}</option>`;
                    $("#Select_Mis_Cuenta").append(op);
                })

                console.log(result);


            });

        }
        function Procesar_Pago() {

            $("#Select_Cuenta")
            $("#Select_Mis_Cuenta")
            var data = {
                Cuenta_A_Pagar_Id: $("#Select_Cuenta").val(),
                Cuenta_Debitar_Id: $("#Select_Mis_Cuenta").val(),
                Monto: $("#Monto").val()

            };
            if ($("#Select_Mis_Cuenta").val() == null || $("#Select_Cuenta").val() == null) {

                Swal.fire({
                    title: "Seleccione una Cuenta",
                    text: "Tienes que selecionar una de tus cuentas",
                    icon: "info"
                })

                return false;

            }

            $.post("/Banking/Pagos/Procesar_Pago", data).done(function (result) {

                Swal.fire({
                    title: result.title,
                    text: result.text,
                    icon: result.icon
                })

                Obtener_Info_Cuentas_A_Pagar();
                Obtener_Info_Cuentas();
            })


        }


        function Obtener_Pagos() {

            $.get("/Banking/Pagos/Obtener_Pagos").done(function (result) {
                $("#Tabla_Pagos").dataTable({
                    language: {
                        "lengthMenu": "Mostrar _MENU_ Registros",
                        "zeroRecords": "No se encontraron resultados",
                        "info": "_TOTAL_ transacciones en total.",
                        "infoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                        "infoFiltered": "(filtrado de un total de _MAX_ registros)",
                        "sSearch": "<i class='fas fa-search'></i> Buscar:",
                        "oPaginate": {
                            "sFirst": "Primero",
                            "sLast": "Último",
                            "sNext": "Siguiente",
                            "sPrevious": "Anterior"
                        },
                        "sProcessing": "Procesando...",
                    },
                    "destroy": "true",
                    "bLengthChange": false,
                    "bInfo": true,
                    "searching": true,
                    data: result.pagosList,
                    columns: [
                        {
                            "data": "pago_ID"
                        },
                        {
                            "data": "fecha_Pago", render: function (fecha) {
                                return moment(fecha).format('lll');
                            }
                        },
                        {
                            "data": "cuenta_Origen_ID"
                        },
                        {
                            "data": "servicio_ID"
                        },
                        {
                            "data": "monto_Total", render: function (monto) {
                                return `RD${formatter.format(monto)}`
                            }
                        },
                    ],
                    responsive: "true"
                });


            });

        }


    </script>
}
